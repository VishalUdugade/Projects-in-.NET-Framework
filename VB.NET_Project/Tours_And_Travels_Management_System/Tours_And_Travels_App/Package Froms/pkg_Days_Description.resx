<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_place.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>